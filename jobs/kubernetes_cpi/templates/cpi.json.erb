<%=
  params = {
    'apiEndpoint' => p('kubernetes.apiEndpoint'),
    'namespace' => p('kubernetes.namespace'),
    'credentials' => {
      'certificate' => p('kubernetes.credentials.certificate'),
      'privateKey' => p('kubernetes.credentials.privateKey')
    },
    'agent' => {
      'ntp' => p('ntp')
    }
  }

  if_p('blobstore') do
    blobstore_params = {
      'provider' => p('blobstore.provider')
    }
    if p('blobstore.provider') == 's3'
      options_params = {
        'bucket_name' => p('blobstore.bucket_name'),
        'access_key_id' => p('blobstore.access_key_id'),
        'secret_access_key' => p('blobstore.secret_access_key')
      }

      def update_blobstore_options(options, manifest_key, rendered_key=manifest_key)
        value = p("blobstore.#{manifest_key}", nil)
        options[rendered_key] = value unless value.nil?
      end

      update_blobstore_options(options_params, 'use_ssl')
      update_blobstore_options(options_params, 's3_port', 'port')
      update_blobstore_options(options_params, 'host')
      update_blobstore_options(options_params, 's3_force_path_style')
      update_blobstore_options(options_params, 'ssl_verify_peer')
      update_blobstore_options(options_params, 's3_multipart_threshold')
      update_blobstore_options(options_params, 's3_signature_version', 'signature_version')
      update_blobstore_options(options_params, 's3_region', 'region')

    elsif p('blobstore.provider') == 'local'
      options_params = {
        'blobstore_path' => p('blobstore.path')
      }
    else
      options_params = {
        'endpoint' => "http://#{p('blobstore.address')}:#{p('blobstore.port')}",
        'user' => p('blobstore.agent.user'),
        'password' => p('blobstore.agent.password')
      }
    end

    blobstore_params['options'] = options_params
    params['agent']['blobstore'] = blobstore_params
  end

  if_p('mbus') do |mbus|
    params['agent']['mbus'] = mbus
  end.else_if_p('nats') do |nats|
    params['agent']['mbus'] = "nats://#{p('nats.user')}:#{p('nats.password')}@#{p('nats.address')}:#{p('nats.port')}"
  end

  JSON.dump(params)
%>
