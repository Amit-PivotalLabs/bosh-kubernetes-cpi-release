strict digraph deps {
"bosh-kubernetes-cpi-release" [style=dashed];
"haskell-kubernetes" [style=dashed];
{rank=max; "base" [shape=box]; };
{rank=max; "fail"; };
{rank=max; "ghc-prim" [shape=box]; };
{rank=max; "integer-gmp" [shape=box]; };
{rank=max; "template-haskell" [shape=box]; };
"MonadRandom" -> "base";
"MonadRandom" -> "mtl";
"MonadRandom" -> "random";
"MonadRandom" -> "transformers";
"MonadRandom" -> "transformers-compat";
"QuickCheck" -> "base";
"QuickCheck" -> "containers";
"QuickCheck" -> "random";
"QuickCheck" -> "template-haskell";
"QuickCheck" -> "tf-random";
"QuickCheck" -> "transformers";
"StateVar" -> "base";
"StateVar" -> "stm";
"StateVar" -> "transformers";
"adjunctions" -> "array";
"adjunctions" -> "base";
"adjunctions" -> "comonad";
"adjunctions" -> "containers";
"adjunctions" -> "contravariant";
"adjunctions" -> "distributive";
"adjunctions" -> "free";
"adjunctions" -> "mtl";
"adjunctions" -> "profunctors";
"adjunctions" -> "semigroupoids";
"adjunctions" -> "semigroups";
"adjunctions" -> "tagged";
"adjunctions" -> "transformers";
"adjunctions" -> "transformers-compat";
"adjunctions" -> "void";
"aeson" -> "attoparsec";
"aeson" -> "base";
"aeson" -> "bytestring";
"aeson" -> "containers";
"aeson" -> "deepseq";
"aeson" -> "dlist";
"aeson" -> "fail";
"aeson" -> "ghc-prim";
"aeson" -> "hashable";
"aeson" -> "mtl";
"aeson" -> "scientific";
"aeson" -> "syb";
"aeson" -> "tagged";
"aeson" -> "template-haskell";
"aeson" -> "text";
"aeson" -> "time";
"aeson" -> "transformers";
"aeson" -> "unordered-containers";
"aeson" -> "vector";
"array" -> "base";
"asn1-encoding" -> "asn1-types";
"asn1-encoding" -> "base";
"asn1-encoding" -> "bytestring";
"asn1-encoding" -> "hourglass";
"asn1-parse" -> "asn1-encoding";
"asn1-parse" -> "asn1-types";
"asn1-parse" -> "base";
"asn1-parse" -> "bytestring";
"asn1-types" -> "base";
"asn1-types" -> "bytestring";
"asn1-types" -> "hourglass";
"asn1-types" -> "memory";
"async" -> "base";
"async" -> "stm";
"attoparsec" -> "array";
"attoparsec" -> "base";
"attoparsec" -> "bytestring";
"attoparsec" -> "containers";
"attoparsec" -> "deepseq";
"attoparsec" -> "scientific";
"attoparsec" -> "text";
"attoparsec" -> "transformers";
"base-compat" -> "base";
"base-compat" -> "unix";
"base-orphans" -> "base";
"base-orphans" -> "ghc-prim";
"base16-bytestring" -> "base";
"base16-bytestring" -> "bytestring";
"base16-bytestring" -> "ghc-prim";
"base64-bytestring" -> "base";
"base64-bytestring" -> "bytestring";
"bifunctors" -> "base";
"bifunctors" -> "base-orphans";
"bifunctors" -> "comonad";
"bifunctors" -> "containers";
"bifunctors" -> "semigroups";
"bifunctors" -> "tagged";
"bifunctors" -> "template-haskell";
"bifunctors" -> "transformers";
"bifunctors" -> "transformers-compat";
"binary" -> "array";
"binary" -> "base";
"binary" -> "bytestring";
"binary" -> "containers";
"blaze-builder" -> "base";
"blaze-builder" -> "bytestring";
"blaze-builder" -> "deepseq";
"blaze-builder" -> "text";
"bosh-kubernetes-cpi-release" -> "aeson";
"bosh-kubernetes-cpi-release" -> "base";
"bosh-kubernetes-cpi-release" -> "bytestring";
"bosh-kubernetes-cpi-release" -> "connection";
"bosh-kubernetes-cpi-release" -> "containers";
"bosh-kubernetes-cpi-release" -> "data-default-class";
"bosh-kubernetes-cpi-release" -> "exceptions";
"bosh-kubernetes-cpi-release" -> "haskell-kubernetes";
"bosh-kubernetes-cpi-release" -> "http-client";
"bosh-kubernetes-cpi-release" -> "http-client-tls";
"bosh-kubernetes-cpi-release" -> "http-types";
"bosh-kubernetes-cpi-release" -> "lens";
"bosh-kubernetes-cpi-release" -> "lens-aeson";
"bosh-kubernetes-cpi-release" -> "logging-effect";
"bosh-kubernetes-cpi-release" -> "mtl";
"bosh-kubernetes-cpi-release" -> "servant";
"bosh-kubernetes-cpi-release" -> "servant-client";
"bosh-kubernetes-cpi-release" -> "text";
"bosh-kubernetes-cpi-release" -> "text-conversions";
"bosh-kubernetes-cpi-release" -> "tls";
"bosh-kubernetes-cpi-release" -> "unordered-containers";
"bosh-kubernetes-cpi-release" -> "wl-pprint-text";
"bosh-kubernetes-cpi-release" -> "x509";
"bosh-kubernetes-cpi-release" -> "yaml";
"byteable" -> "base";
"byteable" -> "bytestring";
"bytestring" -> "base";
"bytestring" -> "deepseq";
"bytestring" -> "ghc-prim";
"bytestring" -> "integer-gmp";
"bytestring-builder" -> "base";
"bytestring-builder" -> "bytestring";
"bytestring-builder" -> "deepseq";
"bytestring-conversion" -> "attoparsec";
"bytestring-conversion" -> "base";
"bytestring-conversion" -> "bytestring";
"bytestring-conversion" -> "case-insensitive";
"bytestring-conversion" -> "double-conversion";
"bytestring-conversion" -> "text";
"case-insensitive" -> "base";
"case-insensitive" -> "bytestring";
"case-insensitive" -> "deepseq";
"case-insensitive" -> "hashable";
"case-insensitive" -> "text";
"cereal" -> "array";
"cereal" -> "base";
"cereal" -> "bytestring";
"cereal" -> "containers";
"cereal" -> "ghc-prim";
"comonad" -> "base";
"comonad" -> "containers";
"comonad" -> "contravariant";
"comonad" -> "distributive";
"comonad" -> "semigroups";
"comonad" -> "tagged";
"comonad" -> "transformers";
"comonad" -> "transformers-compat";
"conduit" -> "base";
"conduit" -> "exceptions";
"conduit" -> "lifted-base";
"conduit" -> "mmorph";
"conduit" -> "monad-control";
"conduit" -> "mtl";
"conduit" -> "resourcet";
"conduit" -> "transformers";
"conduit" -> "transformers-base";
"connection" -> "base";
"connection" -> "byteable";
"connection" -> "bytestring";
"connection" -> "containers";
"connection" -> "data-default-class";
"connection" -> "network";
"connection" -> "socks";
"connection" -> "tls";
"connection" -> "x509";
"connection" -> "x509-store";
"connection" -> "x509-system";
"connection" -> "x509-validation";
"containers" -> "array";
"containers" -> "base";
"containers" -> "deepseq";
"containers" -> "ghc-prim";
"contravariant" -> "StateVar";
"contravariant" -> "base";
"contravariant" -> "semigroups";
"contravariant" -> "transformers";
"contravariant" -> "transformers-compat";
"contravariant" -> "void";
"cookie" -> "base";
"cookie" -> "blaze-builder";
"cookie" -> "bytestring";
"cookie" -> "data-default-class";
"cookie" -> "deepseq";
"cookie" -> "old-locale";
"cookie" -> "text";
"cookie" -> "time";
"cryptonite" -> "base";
"cryptonite" -> "bytestring";
"cryptonite" -> "deepseq";
"cryptonite" -> "ghc-prim";
"cryptonite" -> "integer-gmp";
"cryptonite" -> "memory";
"data-default-class" -> "base";
"deepseq" -> "array";
"deepseq" -> "base";
"directory" -> "base";
"directory" -> "filepath";
"directory" -> "time";
"directory" -> "unix";
"distributive" -> "base";
"distributive" -> "base-orphans";
"distributive" -> "tagged";
"distributive" -> "transformers";
"distributive" -> "transformers-compat";
"dlist" -> "base";
"dlist" -> "deepseq";
"double-conversion" -> "base";
"double-conversion" -> "bytestring";
"double-conversion" -> "ghc-prim";
"double-conversion" -> "integer-gmp";
"double-conversion" -> "text";
"either" -> "MonadRandom";
"either" -> "base";
"either" -> "bifunctors";
"either" -> "exceptions";
"either" -> "free";
"either" -> "mmorph";
"either" -> "monad-control";
"either" -> "mtl";
"either" -> "profunctors";
"either" -> "semigroupoids";
"either" -> "semigroups";
"either" -> "transformers";
"either" -> "transformers-base";
"enclosed-exceptions" -> "base";
"enclosed-exceptions" -> "deepseq";
"enclosed-exceptions" -> "lifted-base";
"enclosed-exceptions" -> "monad-control";
"enclosed-exceptions" -> "transformers";
"enclosed-exceptions" -> "transformers-base";
"errors" -> "base";
"errors" -> "safe";
"errors" -> "transformers";
"errors" -> "transformers-compat";
"errors" -> "unexceptionalio";
"exceptions" -> "base";
"exceptions" -> "mtl";
"exceptions" -> "stm";
"exceptions" -> "template-haskell";
"exceptions" -> "transformers";
"exceptions" -> "transformers-compat";
"filepath" -> "base";
"free" -> "base";
"free" -> "bifunctors";
"free" -> "comonad";
"free" -> "containers";
"free" -> "distributive";
"free" -> "exceptions";
"free" -> "mtl";
"free" -> "prelude-extras";
"free" -> "profunctors";
"free" -> "semigroupoids";
"free" -> "semigroups";
"free" -> "template-haskell";
"free" -> "transformers";
"free" -> "transformers-compat";
"hashable" -> "base";
"hashable" -> "bytestring";
"hashable" -> "ghc-prim";
"hashable" -> "integer-gmp";
"hashable" -> "text";
"haskell-kubernetes" -> "QuickCheck";
"haskell-kubernetes" -> "aeson";
"haskell-kubernetes" -> "base";
"haskell-kubernetes" -> "bytestring";
"haskell-kubernetes" -> "containers";
"haskell-kubernetes" -> "either";
"haskell-kubernetes" -> "http-api-data";
"haskell-kubernetes" -> "http-types";
"haskell-kubernetes" -> "lens";
"haskell-kubernetes" -> "network-uri";
"haskell-kubernetes" -> "quickcheck-instances";
"haskell-kubernetes" -> "scientific";
"haskell-kubernetes" -> "servant";
"haskell-kubernetes" -> "servant-client";
"haskell-kubernetes" -> "split";
"haskell-kubernetes" -> "text";
"haskell-kubernetes" -> "unordered-containers";
"haskell-kubernetes" -> "vector";
"haskell-kubernetes" -> "wai";
"hourglass" -> "base";
"hourglass" -> "deepseq";
"http-api-data" -> "base";
"http-api-data" -> "bytestring";
"http-api-data" -> "text";
"http-api-data" -> "time";
"http-api-data" -> "time-locale-compat";
"http-client" -> "array";
"http-client" -> "base";
"http-client" -> "base64-bytestring";
"http-client" -> "blaze-builder";
"http-client" -> "bytestring";
"http-client" -> "case-insensitive";
"http-client" -> "containers";
"http-client" -> "cookie";
"http-client" -> "deepseq";
"http-client" -> "exceptions";
"http-client" -> "filepath";
"http-client" -> "ghc-prim";
"http-client" -> "http-types";
"http-client" -> "mime-types";
"http-client" -> "network";
"http-client" -> "network-uri";
"http-client" -> "random";
"http-client" -> "streaming-commons";
"http-client" -> "text";
"http-client" -> "time";
"http-client" -> "transformers";
"http-client-tls" -> "base";
"http-client-tls" -> "bytestring";
"http-client-tls" -> "case-insensitive";
"http-client-tls" -> "connection";
"http-client-tls" -> "cryptonite";
"http-client-tls" -> "data-default-class";
"http-client-tls" -> "exceptions";
"http-client-tls" -> "http-client";
"http-client-tls" -> "http-types";
"http-client-tls" -> "memory";
"http-client-tls" -> "network";
"http-client-tls" -> "tls";
"http-client-tls" -> "transformers";
"http-media" -> "base";
"http-media" -> "bytestring";
"http-media" -> "case-insensitive";
"http-media" -> "containers";
"http-types" -> "array";
"http-types" -> "base";
"http-types" -> "blaze-builder";
"http-types" -> "bytestring";
"http-types" -> "case-insensitive";
"http-types" -> "text";
"kan-extensions" -> "adjunctions";
"kan-extensions" -> "array";
"kan-extensions" -> "base";
"kan-extensions" -> "comonad";
"kan-extensions" -> "containers";
"kan-extensions" -> "contravariant";
"kan-extensions" -> "distributive";
"kan-extensions" -> "free";
"kan-extensions" -> "mtl";
"kan-extensions" -> "semigroupoids";
"kan-extensions" -> "tagged";
"kan-extensions" -> "transformers";
"lens" -> "array";
"lens" -> "base";
"lens" -> "base-orphans";
"lens" -> "bifunctors";
"lens" -> "bytestring";
"lens" -> "comonad";
"lens" -> "containers";
"lens" -> "contravariant";
"lens" -> "distributive";
"lens" -> "exceptions";
"lens" -> "filepath";
"lens" -> "free";
"lens" -> "ghc-prim";
"lens" -> "hashable";
"lens" -> "kan-extensions";
"lens" -> "mtl";
"lens" -> "parallel";
"lens" -> "profunctors";
"lens" -> "reflection";
"lens" -> "semigroupoids";
"lens" -> "semigroups";
"lens" -> "tagged";
"lens" -> "template-haskell";
"lens" -> "text";
"lens" -> "transformers";
"lens" -> "transformers-compat";
"lens" -> "unordered-containers";
"lens" -> "vector";
"lens" -> "void";
"lens-aeson" -> "aeson";
"lens-aeson" -> "attoparsec";
"lens-aeson" -> "base";
"lens-aeson" -> "bytestring";
"lens-aeson" -> "lens";
"lens-aeson" -> "scientific";
"lens-aeson" -> "text";
"lens-aeson" -> "unordered-containers";
"lens-aeson" -> "vector";
"lifted-base" -> "base";
"lifted-base" -> "monad-control";
"lifted-base" -> "transformers-base";
"logging-effect" -> "async";
"logging-effect" -> "base";
"logging-effect" -> "exceptions";
"logging-effect" -> "free";
"logging-effect" -> "monad-control";
"logging-effect" -> "mtl";
"logging-effect" -> "semigroups";
"logging-effect" -> "stm";
"logging-effect" -> "stm-delay";
"logging-effect" -> "text";
"logging-effect" -> "time";
"logging-effect" -> "transformers";
"logging-effect" -> "transformers-base";
"logging-effect" -> "wl-pprint-text";
"memory" -> "base";
"memory" -> "bytestring";
"memory" -> "deepseq";
"memory" -> "ghc-prim";
"mime-types" -> "base";
"mime-types" -> "bytestring";
"mime-types" -> "containers";
"mime-types" -> "text";
"mmorph" -> "base";
"mmorph" -> "mtl";
"mmorph" -> "transformers";
"mmorph" -> "transformers-compat";
"monad-control" -> "base";
"monad-control" -> "stm";
"monad-control" -> "transformers";
"monad-control" -> "transformers-base";
"monad-control" -> "transformers-compat";
"mtl" -> "base";
"mtl" -> "transformers";
"network" -> "base";
"network" -> "bytestring";
"network" -> "unix";
"network-uri" -> "base";
"network-uri" -> "deepseq";
"network-uri" -> "parsec";
"old-locale" -> "base";
"old-time" -> "base";
"old-time" -> "old-locale";
"parallel" -> "array";
"parallel" -> "base";
"parallel" -> "containers";
"parallel" -> "deepseq";
"parsec" -> "base";
"parsec" -> "bytestring";
"parsec" -> "mtl";
"parsec" -> "text";
"pem" -> "base";
"pem" -> "base64-bytestring";
"pem" -> "bytestring";
"pem" -> "mtl";
"prelude-extras" -> "base";
"primitive" -> "base";
"primitive" -> "ghc-prim";
"primitive" -> "transformers";
"process" -> "base";
"process" -> "deepseq";
"process" -> "directory";
"process" -> "filepath";
"process" -> "unix";
"profunctors" -> "base";
"profunctors" -> "base-orphans";
"profunctors" -> "bifunctors";
"profunctors" -> "comonad";
"profunctors" -> "contravariant";
"profunctors" -> "distributive";
"profunctors" -> "tagged";
"profunctors" -> "transformers";
"quickcheck-instances" -> "QuickCheck";
"quickcheck-instances" -> "array";
"quickcheck-instances" -> "base";
"quickcheck-instances" -> "bytestring";
"quickcheck-instances" -> "containers";
"quickcheck-instances" -> "hashable";
"quickcheck-instances" -> "old-time";
"quickcheck-instances" -> "scientific";
"quickcheck-instances" -> "text";
"quickcheck-instances" -> "time";
"quickcheck-instances" -> "unordered-containers";
"quickcheck-instances" -> "vector";
"random" -> "base";
"random" -> "time";
"reflection" -> "base";
"reflection" -> "template-haskell";
"resourcet" -> "base";
"resourcet" -> "containers";
"resourcet" -> "exceptions";
"resourcet" -> "lifted-base";
"resourcet" -> "mmorph";
"resourcet" -> "monad-control";
"resourcet" -> "mtl";
"resourcet" -> "transformers";
"resourcet" -> "transformers-base";
"resourcet" -> "transformers-compat";
"safe" -> "base";
"scientific" -> "base";
"scientific" -> "binary";
"scientific" -> "bytestring";
"scientific" -> "containers";
"scientific" -> "deepseq";
"scientific" -> "ghc-prim";
"scientific" -> "hashable";
"scientific" -> "integer-gmp";
"scientific" -> "text";
"scientific" -> "vector";
"semigroupoids" -> "base";
"semigroupoids" -> "base-orphans";
"semigroupoids" -> "bifunctors";
"semigroupoids" -> "comonad";
"semigroupoids" -> "containers";
"semigroupoids" -> "contravariant";
"semigroupoids" -> "distributive";
"semigroupoids" -> "semigroups";
"semigroupoids" -> "tagged";
"semigroupoids" -> "transformers";
"semigroupoids" -> "transformers-compat";
"semigroups" -> "base";
"servant" -> "aeson";
"servant" -> "attoparsec";
"servant" -> "base";
"servant" -> "base-compat";
"servant" -> "bytestring";
"servant" -> "bytestring-conversion";
"servant" -> "case-insensitive";
"servant" -> "http-api-data";
"servant" -> "http-media";
"servant" -> "http-types";
"servant" -> "mmorph";
"servant" -> "mtl";
"servant" -> "network-uri";
"servant" -> "string-conversions";
"servant" -> "text";
"servant" -> "vault";
"servant-client" -> "aeson";
"servant-client" -> "attoparsec";
"servant-client" -> "base";
"servant-client" -> "base64-bytestring";
"servant-client" -> "bytestring";
"servant-client" -> "exceptions";
"servant-client" -> "http-api-data";
"servant-client" -> "http-client";
"servant-client" -> "http-client-tls";
"servant-client" -> "http-media";
"servant-client" -> "http-types";
"servant-client" -> "network-uri";
"servant-client" -> "safe";
"servant-client" -> "servant";
"servant-client" -> "string-conversions";
"servant-client" -> "text";
"servant-client" -> "transformers";
"servant-client" -> "transformers-compat";
"socks" -> "base";
"socks" -> "bytestring";
"socks" -> "cereal";
"socks" -> "network";
"split" -> "base";
"stm" -> "array";
"stm" -> "base";
"stm-delay" -> "base";
"stm-delay" -> "stm";
"streaming-commons" -> "array";
"streaming-commons" -> "async";
"streaming-commons" -> "base";
"streaming-commons" -> "blaze-builder";
"streaming-commons" -> "bytestring";
"streaming-commons" -> "directory";
"streaming-commons" -> "network";
"streaming-commons" -> "process";
"streaming-commons" -> "random";
"streaming-commons" -> "stm";
"streaming-commons" -> "text";
"streaming-commons" -> "transformers";
"streaming-commons" -> "unix";
"streaming-commons" -> "zlib";
"string-conversions" -> "base";
"string-conversions" -> "bytestring";
"string-conversions" -> "text";
"string-conversions" -> "utf8-string";
"syb" -> "base";
"tagged" -> "base";
"tagged" -> "deepseq";
"tagged" -> "template-haskell";
"tagged" -> "transformers";
"tagged" -> "transformers-compat";
"text" -> "array";
"text" -> "base";
"text" -> "binary";
"text" -> "bytestring";
"text" -> "deepseq";
"text" -> "ghc-prim";
"text" -> "integer-gmp";
"text-conversions" -> "base";
"text-conversions" -> "base16-bytestring";
"text-conversions" -> "base64-bytestring";
"text-conversions" -> "bytestring";
"text-conversions" -> "errors";
"text-conversions" -> "text";
"tf-random" -> "base";
"tf-random" -> "primitive";
"tf-random" -> "random";
"tf-random" -> "time";
"time" -> "base";
"time" -> "deepseq";
"time-locale-compat" -> "base";
"time-locale-compat" -> "time";
"tls" -> "asn1-encoding";
"tls" -> "asn1-types";
"tls" -> "async";
"tls" -> "base";
"tls" -> "bytestring";
"tls" -> "cereal";
"tls" -> "cryptonite";
"tls" -> "data-default-class";
"tls" -> "memory";
"tls" -> "mtl";
"tls" -> "network";
"tls" -> "transformers";
"tls" -> "x509";
"tls" -> "x509-store";
"tls" -> "x509-validation";
"transformers" -> "base";
"transformers-base" -> "base";
"transformers-base" -> "stm";
"transformers-base" -> "transformers";
"transformers-base" -> "transformers-compat";
"transformers-compat" -> "base";
"transformers-compat" -> "ghc-prim";
"transformers-compat" -> "transformers";
"unexceptionalio" -> "base";
"unix" -> "base";
"unix" -> "bytestring";
"unix" -> "time";
"unordered-containers" -> "base";
"unordered-containers" -> "deepseq";
"unordered-containers" -> "hashable";
"utf8-string" -> "base";
"utf8-string" -> "bytestring";
"vault" -> "base";
"vault" -> "containers";
"vault" -> "hashable";
"vault" -> "unordered-containers";
"vector" -> "base";
"vector" -> "deepseq";
"vector" -> "ghc-prim";
"vector" -> "primitive";
"void" -> "base";
"void" -> "deepseq";
"void" -> "ghc-prim";
"void" -> "hashable";
"void" -> "semigroups";
"wai" -> "base";
"wai" -> "blaze-builder";
"wai" -> "bytestring";
"wai" -> "bytestring-builder";
"wai" -> "http-types";
"wai" -> "network";
"wai" -> "text";
"wai" -> "transformers";
"wai" -> "vault";
"wl-pprint-text" -> "base";
"wl-pprint-text" -> "text";
"x509" -> "asn1-encoding";
"x509" -> "asn1-parse";
"x509" -> "asn1-types";
"x509" -> "base";
"x509" -> "bytestring";
"x509" -> "containers";
"x509" -> "cryptonite";
"x509" -> "hourglass";
"x509" -> "memory";
"x509" -> "mtl";
"x509" -> "pem";
"x509-store" -> "asn1-encoding";
"x509-store" -> "asn1-types";
"x509-store" -> "base";
"x509-store" -> "bytestring";
"x509-store" -> "containers";
"x509-store" -> "cryptonite";
"x509-store" -> "directory";
"x509-store" -> "filepath";
"x509-store" -> "mtl";
"x509-store" -> "pem";
"x509-store" -> "x509";
"x509-system" -> "base";
"x509-system" -> "bytestring";
"x509-system" -> "containers";
"x509-system" -> "directory";
"x509-system" -> "filepath";
"x509-system" -> "mtl";
"x509-system" -> "pem";
"x509-system" -> "process";
"x509-system" -> "x509";
"x509-system" -> "x509-store";
"x509-validation" -> "asn1-encoding";
"x509-validation" -> "asn1-types";
"x509-validation" -> "base";
"x509-validation" -> "byteable";
"x509-validation" -> "bytestring";
"x509-validation" -> "containers";
"x509-validation" -> "cryptonite";
"x509-validation" -> "data-default-class";
"x509-validation" -> "hourglass";
"x509-validation" -> "memory";
"x509-validation" -> "mtl";
"x509-validation" -> "pem";
"x509-validation" -> "x509";
"x509-validation" -> "x509-store";
"yaml" -> "aeson";
"yaml" -> "attoparsec";
"yaml" -> "base";
"yaml" -> "bytestring";
"yaml" -> "conduit";
"yaml" -> "containers";
"yaml" -> "directory";
"yaml" -> "enclosed-exceptions";
"yaml" -> "filepath";
"yaml" -> "resourcet";
"yaml" -> "scientific";
"yaml" -> "semigroups";
"yaml" -> "template-haskell";
"yaml" -> "text";
"yaml" -> "transformers";
"yaml" -> "unordered-containers";
"yaml" -> "vector";
"zlib" -> "base";
"zlib" -> "bytestring";
}
